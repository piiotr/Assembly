     1                                  section .data 
     2                                  section .bss
     3                                  section .text
     4                                  global	_start
     5                                  	_start:
     6 00000000 4831FF                  		xor	rdi,	rdi		; use rdi for the output 
     7 00000003 B832000000              		mov	rax,	50		; use rax for the first number 
     8 00000008 B90B000000              		mov	rcx,	11		; use rcx for the second number 
     9 0000000D 4831D2                  		xor	rdx,	rdx		; clean up rdx for the remainder 
    10                                  
    11                                  	theloop:
    12 00000010 48F7F1                  		div	rcx			; divide 32 / 12 
    13 00000013 4883FA00                		cmp	rdx,	0		; if reminder == 0 
    14 00000017 480F44F9                		cmove	rdi,	rcx		; rcx is the result 
    15 0000001B 740B                    		je	finish			; exit 
    16                                  		
    17 0000001D 4889C8                  		mov	rax,	rcx		
    18 00000020 4889D1                  		mov	rcx,	rdx
    19 00000023 4831D2                  		xor	rdx,	rdx
    20 00000026 EBE8                    		jmp	theloop
    21                                  
    22                                  
    23                                  
    24                                  
    25                                  	finish:
    26 00000028 B83C000000              		mov	rax,	60
    27 0000002D 0F05                    		syscall
    28                                  
