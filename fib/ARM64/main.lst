AARCH64 GAS  main.asm 			page 1


   1              	.section .data
   2              	.section .bss
   3              	.section .text
   4              	.global _start
   5              	    _start:
   6              	        //  0 + 1 + 1 + 2 + 3 + 5 + 8 + 13 + 21 + 34
   7              	        // use x0 for output
   8              	        // x4 will hold the number of numbers
   9 0000 A40080D2 	        mov     x4,     #5
  10              	        // x0 will hold the final result 
  11 0004 000080D2 	        mov     x0,     #0
  12              	        // x1 will hold the first number
  13 0008 010080D2 	        mov     x1,     #0
  14              	        // x2 will hold the second number 
  15 000c 220080D2 	        mov     x2,     #1
  16              	        // x3 will hold the pair 
  17 0010 030080D2 	        mov     x3,     #0
  18              	
  19              	    theloop:
  20 0014 2000008B 		add	x0,	x1,	x0
  21 0018 2300038B 		add	x3,	x1,	x3
  22 001c 840400D1 		sub	x4,	x4,	#1
  23 0020 9F0000F1 		cmp	x4,	#0
  24 0024 40010054 		beq	finish	
  25              	
  26 0028 4000008B 		add	x0,	x2,	x0
  27 002c 4300038B 		add	x3,	x2,	x3
  28 0030 840400D1 		sub	x4,	x4,	#1
  29 0034 9F0000F1 		cmp	x4,	#0
  30 0038 A0000054 		beq	finish
  31              		
  32 003c E10303AA 		mov	x1,	x3
  33 0040 4200038B 		add	x2,	x2,	x3
  34 0044 030080D2 		mov	x3,	#0
  35 0048 F3FFFF17 		b	theloop
  36              	
  37              	
  38              	
  39              	
  40              	    finish:
  41 004c A80B8052 	        mov w8, #93 		//Move 93, end program, into w8
  42 0050 010000D4 	        svc #0				//Poke the kernel
  43              	
AARCH64 GAS  main.asm 			page 2


DEFINED SYMBOLS
            main.asm:5      .text:0000000000000000 _start
            main.asm:9      .text:0000000000000000 $x
            main.asm:19     .text:0000000000000014 theloop
            main.asm:40     .text:000000000000004c finish

NO UNDEFINED SYMBOLS
